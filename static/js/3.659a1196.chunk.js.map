{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","panes/profile/preferences/trustedApplications/service.ts","panes/profile/preferences/trustedApplications/view.tsx","panes/profile/preferences/trustedApplications/container.tsx","components/ProfileCard.tsx","panes/profile/preferences/preferences.tsx","panes/profile/container.tsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","getStatementsToDelete","origin","person","store","statementsMatching","ns","acl","reduce","memo","st","concat","subject","fetchTrustedApps","each","undefined","flatMap","app","map","modes","value","mode","replace","sort","appA","appB","View","props","react","className","apps","view_ApplicationRow","key","onSave","onSaveApp","onDelete","onDeleteApp","view_NewApplication","ApplicationRow","initialModes","Read","indexOf","Append","Write","Control","_React$useState","React","_React$useState2","slicedToArray","setModes","getCheckboxHandler","event","checked","objectSpread","defineProperty","setMode","target","onSubmit","preventDefault","newModes","keys","filter","type","onChange","name","id","onClick","NewApplication","_React$useState3","_React$useState4","setOrigin","_React$useState5","_React$useState6","e","placeholder","TrustedApplications","fetchedTrustedApps","profile","useState","trustedApps","setTrustedApps","updater","editable","doc","uri","react_default","a","createElement","view_View","Promise","resolve","deletions","$rdf","sym","additions","nodeName","application","BlankNode","getStatementsToAdd","Math","random","substring","update","newApp","into","index","findIndex","found","slice","insertTrustedApp","removeTrustedApp","ProfileCard","profileStatements","soFar","statement","predicate","foaf","object","vcard","photo","organization","role","src","alt","Preferences","webId","useWebId","container","Container","view","setView","getMenuHandler","forView","container_MainItem","assign","lib","href","MainItem","preferences_Preferences","resource","ProfileCard_ProfileCard"],"mappings":"iJAGe,SAAAA,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GFGmCQ,CAAef,IGJnC,WACf,UAAAgB,UAAA,mDHG2DC,eIApD,SAASC,EACdC,EACAC,EACAC,GAWA,OAT8BA,EAAMC,mBAAmB,KAAMC,IAAGC,IAAI,UAAWL,EAAQ,MACtCM,OAC/C,SAACC,EAAMC,GACL,OAAOD,EACJE,OAAOP,EAAMC,mBAAmBF,EAAQG,IAAGC,IAAI,cAAeG,EAAGE,QAAS,MAAM,IAChFD,OAAOP,EAAMC,mBAAmBK,EAAGE,QAAS,KAAM,KAAM,MAAM,KAEnE,IAwBG,SAASC,EACdT,EACAQ,GAEA,OAAQR,EAAMU,KAAKF,EAASN,IAAGC,IAAI,mBAAeQ,OAAWA,GAC1DC,QAAQ,SAACC,GACR,OAAOb,EAAMU,KAAKG,EAAKX,IAAGC,IAAI,eAAWQ,OAAWA,GACjDG,IAAI,SAAChB,GACJ,IAAMiB,EAAQf,EAAMU,KAAKG,EAAKX,IAAGC,IAAI,aAASQ,OAAWA,GAMzD,MALuC,CACrCb,OAAQA,EAAOkB,MACfR,QAASA,EAAQQ,MACjBD,MAAOA,EAAMD,IAAI,SAACG,GAAD,OAA0BA,EAabD,MACrCE,QAAQhB,IAAGC,IAAI,QAAQa,MAAO,QAC9BE,QAAQhB,IAAGC,IAAI,UAAUa,MAAO,UAChCE,QAAQhB,IAAGC,IAAI,SAASa,MAAO,SAC/BE,QAAQhB,IAAGC,IAAI,WAAWa,MAAO,kBAZjCG,KAAK,SAACC,EAA0BC,GAA3B,OAAyDD,EAAKtB,OAASuB,EAAKvB,OAAU,GAAK,0BC9CxFwB,EAAwB,SAACC,GACpC,OACEC,EAAA,cAAAA,EAAA,cACEA,EAAA,oBAAIC,UAAU,SAAd,gBACAD,EAAA,mBAAGC,UAAU,WAAb,0DACAD,EAAA,mBAAGC,UAAU,WAAb,iEACAD,EAAA,uBAAOC,UAAU,6CACfD,EAAA,2BACEA,EAAA,wBACEA,EAAA,2CACAA,EAAA,wCACAA,EAAA,2BAGJA,EAAA,2BACGD,EAAMG,KAAKZ,IAAI,SAACD,GAAD,OACdW,EAAA,cAACG,EAAD,CACEC,IAAKf,EAAIf,OACTe,IAAKA,EACLgB,OAAQN,EAAMO,UACdC,SAAUR,EAAMS,kBAKxBR,EAAA,cAACS,EAAD,CAAgBJ,OAAQN,EAAMO,cAK9BI,EAID,SAACX,GACJ,IAAMY,EAAe,CACnBC,MAA2C,IAArCb,EAAMV,IAAIE,MAAMsB,QAAQ,QAC9BC,QAA+C,IAAvCf,EAAMV,IAAIE,MAAMsB,QAAQ,UAChCE,OAA6C,IAAtChB,EAAMV,IAAIE,MAAMsB,QAAQ,SAC/BG,SAAiD,IAAxCjB,EAAMV,IAAIE,MAAMsB,QAAQ,YALrBI,EAOYC,WAA0CP,GAPtDQ,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GAOP1B,EAPO4B,EAAA,GAOAE,EAPAF,EAAA,GAYRG,EAAqB,SAAC7B,GAC1B,OAAO,SAAC8B,GAAD,OAJO,SAAC9B,EAAY+B,GAC3BH,EAASxD,OAAA4D,EAAA,EAAA5D,CAAA,GAAK0B,EAAN1B,OAAA6D,EAAA,EAAA7D,CAAA,GAAc4B,EAAO+B,KAG0BG,CAAQlC,EAAM8B,EAAMK,OAAOJ,WAUpF,OACExB,EAAA,wBACEA,EAAA,wBACEA,EAAA,uBAAID,EAAMV,IAAIf,SAEhB0B,EAAA,wBACEA,EAAA,sBAAM6B,SAbU,SAACN,GACrBA,EAAMO,iBAEN,IAAMC,EAAWlE,OAAOmE,KAAKzC,GAAO0C,OAAO,SAAAxC,GAAI,OAAIF,EAAME,KACzDM,EAAMM,OAAON,EAAMV,IAAIf,OAAQyD,KAUzB/B,EAAA,qBAAKC,UAAU,oBACbD,EAAA,qBAAKC,UAAU,WACbD,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,QAC7BE,QAASjC,EAAMqB,KACfwB,KAAK,OACLC,GAAG,SANP,SAWFrC,EAAA,qBAAKC,UAAU,WACbD,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,UAC7BE,QAASjC,EAAMuB,OACfsB,KAAK,SACLC,GAAG,WANP,WAWFrC,EAAA,qBAAKC,UAAU,WACbD,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,SAC7BE,QAASjC,EAAMwB,MACfqB,KAAK,QACLC,GAAG,UANP,UAWFrC,EAAA,qBAAKC,UAAU,WACbD,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,WAC7BE,QAASjC,EAAMyB,QACfoB,KAAK,UACLC,GAAG,YANP,aAYJrC,EAAA,qBAAKC,UAAU,SACbD,EAAA,qBAAKC,UAAU,WACbD,EAAA,wBAAQkC,KAAK,SAASjC,UAAU,mBAAhC,YAKRD,EAAA,oBAAIC,UAAU,4BACZD,EAAA,wBACEsC,QAAS,kBAAMvC,EAAMQ,SAASR,EAAMV,IAAIf,SACxC2B,UAAU,6BAFZ,aASFsC,EAAoD,SAACxC,GAAU,IAAAyC,EACvCtB,aADuCuB,EAAA5E,OAAAuD,EAAA,EAAAvD,CAAA2E,EAAA,GAC5DlE,EAD4DmE,EAAA,GACpDC,EADoDD,EAAA,GAAAE,EAEzCzB,WAA0C,CAClEN,MAAM,EACNE,QAAQ,EACRC,OAAO,EACPC,SAAS,IANwD4B,EAAA/E,OAAAuD,EAAA,EAAAvD,CAAA8E,EAAA,GAE5DpD,EAF4DqD,EAAA,GAErDvB,EAFqDuB,EAAA,GAY7DtB,EAAqB,SAAC7B,GAC1B,OAAO,SAAC8B,GAAD,OAJO,SAAC9B,EAAY+B,GAC3BH,EAASxD,OAAA4D,EAAA,EAAA5D,CAAA,GAAK0B,EAAN1B,OAAA6D,EAAA,EAAA7D,CAAA,GAAc4B,EAAO+B,KAG0BG,CAAQlC,EAAM8B,EAAMK,OAAOJ,WAUpF,OACExB,EAAA,sBAAM6B,SARc,SAACN,GACrBA,EAAMO,iBAEN,IAAMC,EAAWlE,OAAOmE,KAAKzC,GAAO0C,OAAO,SAAAxC,GAAI,OAAIF,EAAME,KACzDM,EAAMM,OAAO/B,EAAQyD,IAIU9B,UAAU,UACvCD,EAAA,qBAAKC,UAAU,SACbD,EAAA,uBAAOC,UAAU,SAAjB,YACAD,EAAA,uBACEkC,KAAK,MACLC,SAAU,SAACU,GAAD,OAAOH,EAAUG,EAAEjB,OAAOpC,QACpC4C,KAAK,SACLC,GAAG,SACHS,YAAY,sBACZ7C,UAAU,WAGdD,EAAA,qBAAKC,UAAU,SACbD,EAAA,qBAAKC,UAAU,WACbD,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,QAC7Bc,KAAK,OACLC,GAAG,SALP,QASArC,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,UAC7Bc,KAAK,SACLC,GAAG,WALP,UASArC,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,SAC7Bc,KAAK,QACLC,GAAG,UALP,SASArC,EAAA,uBAAOC,UAAU,YACfD,EAAA,uBACEkC,KAAK,WACLC,SAAUb,EAAmB,WAC7Bc,KAAK,UACLC,GAAG,YALP,aAWJrC,EAAA,qBAAKC,UAAU,SACbD,EAAA,qBAAKC,UAAU,WACbD,EAAA,wBAAQkC,KAAK,SAASjC,UAAU,qBAAhC,qEChNH,IAAM8C,EAAuC,SAAChD,GACnD,IAAMiD,EAA2C/D,EAAiBc,EAAMvB,MAAOuB,EAAMkD,SADxBhC,EAGvBC,IAAMgC,SAASF,GAHQ7B,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GAGtDkC,EAHsDhC,EAAA,GAGzCiC,EAHyCjC,EAAA,GAM7D,IAD6BpB,EAAMsD,QAAgBC,SAASvD,EAAMkD,QAAQM,MAAMC,IAAKzD,EAAMvB,OAEzF,OAAOiF,EAAAC,EAAAC,cAAA,2BAAmB5D,EAAMkD,QAAQM,MAAMC,IAAvC,gDA6BT,OACEC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACC,EAAD,CACE1D,KAAMiD,EACN7C,UA9Be,SAAChC,EAAgBiB,GAWpC,OAVe,IAAIsE,QAAc,SAACC,GAChC,IAAMC,EAAY1F,EAAsB2F,IAAKC,IAAI3F,GAASyB,EAAMkD,QAASlD,EAAMvB,OACzE0F,EFJL,SACL5F,EACA6F,EACA5E,EACAhB,GAEA,IAAI6F,EAAc,IAAIJ,IAAKK,UAAT,MAAAtF,OAAyBoF,IAC3C,OACEH,IAAKlF,GAAGP,EAAQG,IAAGC,IAAI,cAAeyF,EAAa7F,EAAOgF,OAC1DS,IAAKlF,GAAGsF,EAAa1F,IAAGC,IAAI,UAAWL,EAAQC,EAAOgF,QAFxDxE,OAAA7B,EAGKqC,EACAD,IAAI,SAAAG,GACH,OAAOf,IAAGC,IAAIc,KAEfH,IAAI,SAAAG,GAAI,OAAIuE,IAAKlF,GAAGsF,EAAa1F,IAAGC,IAAI,QAASc,EAAMlB,EAAOgF,WEV7Ce,CAAmBN,IAAKC,IAAI3F,GAoD3CiG,KAAKC,SAASzG,SAAS,IAAI0G,UAAU,GApDuClF,EAAOQ,EAAMkD,SAC5FlD,EAAMvB,MAAM6E,QAASqB,OAAOX,EAAWG,EAAW,WAChD,IAAMS,EAA6B,CAAE3F,QAASe,EAAMkD,QAAQzD,MAAOlB,SAAQiB,SAC3E6D,EA+BR,SAA2B/D,EAAyBuF,GAClD,IAAMC,EAAQD,EAAKE,UAAU,SAAAC,GAAK,OAAIA,EAAMzG,SAAWe,EAAIf,SAC3D,OAAe,IAAXuG,EACKD,EAAK7F,OAAOM,GAGduF,EAAKI,MAAM,EAAGH,GAClB9F,OAAOM,GACPN,OAAO6F,EAAKI,MAAMH,EAAQ,IAvCRI,CAAiBN,EAAQxB,IACxCW,SAwBAtD,YAjBY,SAAClC,GASjB,OARe,IAAIuF,QAAc,SAACC,GAChC,IAAMC,EAAY1F,EAAsB2F,IAAKC,IAAI3F,GAASyB,EAAMkD,QAASlD,EAAMvB,OAC/EuB,EAAMvB,MAAM6E,QAASqB,OAAOX,EAAW,GAAI,WACzCX,EA6BR,SAA2B9E,EAAgBL,GACzC,IAAM4G,EAAQ5G,EAAK6G,UAAU,SAAAC,GAAK,OAAIA,EAAMzG,SAAWA,IACvD,OAAmB,IAAXuG,EACJ5G,EACAA,EAAK+G,MAAM,EAAGH,GAAO9F,OAAOd,EAAK+G,MAAMH,EAAQ,IAjC9BK,CAAiB5G,EAAQ6E,IACxCW,mGCjCKqB,EAA+B,SAACpF,GAC3C,IAAMkD,EAAqBlD,EAAMqF,kBAyBNxG,OACzB,SAACyG,EAAOC,GAWN,OAVIA,EAAUC,UAAU/F,QAAUd,IAAG8G,KAAK,QAAQhG,MAChD6F,EAAMjD,KAAOkD,EAAUG,OAAOjG,MACrB8F,EAAUC,UAAU/F,QAAUd,IAAGgH,MAAM,YAAYlG,MAC5D6F,EAAMM,MAAQL,EAAUG,OAAOjG,MACtB8F,EAAUC,UAAU/F,QAAUd,IAAGgH,MAAM,qBAAqBlG,MACrE6F,EAAMO,aAAeN,EAAUG,OAAOjG,MAC7B8F,EAAUC,UAAU/F,QAAUd,IAAGgH,MAAM,QAAQlG,QACxD6F,EAAMQ,KAAOP,EAAUG,OAAOjG,OAGzB6F,GAET,IAtCIM,EAAQ1C,EAAQ0C,MAAQlC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK7C,EAAQ0C,MAAO1F,UAAU,mBAAmB8F,IAAK9C,EAAQb,MAAQ,KAAQ,KAEjH,OACEqB,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,QACbwD,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,WACbwD,EAAAC,EAAAC,cAAA,MAAI1D,UAAU,SAASgD,EAAQb,MAAQ,aACvCqB,EAAAC,EAAAC,cAAA,KAAG1D,UAAU,WACV0F,GAEHlC,EAAAC,EAAAC,cAAA,KAAG1D,UAAU,WACVgD,EAAQ4C,KADX,IACmB5C,EAAQ4C,MAAQ5C,EAAQ2C,aAAgB,OAAS,KADpE,IAC2E3C,EAAQ2C,+BCT9EI,EAA+B,SAACjG,GAC3C,IAAMkG,EAAQC,qBAEd,OAAKD,GAASA,IAAUlG,EAAMkD,QAAQzD,MAOpCiE,EAAAC,EAAAC,cAAA,WAAS1D,UAAU,WACjBwD,EAAAC,EAAAC,cAACwC,EAAA,oBAAD,CACE3H,MAAOuB,EAAMvB,MACb6E,QAAStD,EAAMsD,QACfJ,QAASlD,EAAMkD,WATjBQ,EAAAC,EAAAC,cAAA,4FCTC,IAAMyC,EAA2B,SAACrG,GAAU,IAAAkB,EACzBC,IAAMgC,SAAgB,QADG/B,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GAC1CoF,EAD0ClF,EAAA,GACpCmF,EADoCnF,EAAA,GAGjD,SAASoF,EAAeC,GACtB,OAAO,SAACjF,GACNA,EAAMO,iBAENwE,EAAQE,IAGZ,OACE/C,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,WACbwD,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,UACbwD,EAAAC,EAAAC,cAAA,WAAS1D,UAAU,WACjBwD,EAAAC,EAAAC,cAAC8C,EAAD5I,OAAA6I,OAAA,GAAc3G,EAAd,CAAqBsG,KAAMA,OAG/B5C,EAAAC,EAAAC,cAACgD,EAAA,SAAD,KACElD,EAAAC,EAAAC,cAAA,SAAO1D,UAAU,yBACfwD,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,WACbwD,EAAAC,EAAAC,cAAA,OAAK1D,UAAU,QACbwD,EAAAC,EAAAC,cAAA,MAAI1D,UAAU,aACZwD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAEEiD,KAAK,WACLtE,QAASiE,EAAe,SAH1B,YAMF9C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAEEiD,KAAK,eACLtE,QAASiE,EAAe,gBAH1B,wBAeZM,EAA2D,SAAC9G,GAChE,GAAmB,gBAAfA,EAAMsG,KACR,OACE5C,EAAAC,EAAAC,cAACmD,EAAD,CACEtI,MAAOuB,EAAMvB,MACb6E,QAAStD,EAAMsD,QACfJ,QAASlD,EAAMgH,WAKrB,IAAM3B,EAAoBrF,EAAMvB,MAAMC,mBAAmBsB,EAAMgH,SAAU,KAAM,KAAMhH,EAAMgH,SAASxD,OAEpG,OACEE,EAAAC,EAAAC,cAACqD,EAAD,CAAa5B,kBAAmBA","file":"static/js/3.659a1196.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import $rdf, { NamedNode, IndexedFormula, Statement } from 'rdflib'\nimport { namespaces as ns } from '../../../../namespace';\nimport { Mode, TrustedApplication } from './model'\n\nexport function getStatementsToDelete (\n  origin: NamedNode,\n  person: NamedNode,\n  store: IndexedFormula,\n) {\n  const applicationStatements = store.statementsMatching(null, ns.acl('origin'), origin, null)\n  const statementsToDelete = applicationStatements.reduce(\n    (memo, st) => {\n      return memo\n        .concat(store.statementsMatching(person, ns.acl('trustedApp'), st.subject, null, false))\n        .concat(store.statementsMatching(st.subject, null, null, null, false))\n    },\n    [] as Statement[]\n  )\n  return statementsToDelete\n}\n\nexport function getStatementsToAdd (\n  origin: NamedNode,\n  nodeName: string,\n  modes: Mode[],\n  person: NamedNode,\n) {\n  var application = new $rdf.BlankNode(`bn_${nodeName}`)\n  return [\n    $rdf.st(person, ns.acl('trustedApp'), application, person.doc()),\n    $rdf.st(application, ns.acl('origin'), origin, person.doc()),\n    ...modes\n      .map(mode => {\n        return ns.acl(mode)\n      })\n      .map(mode => $rdf.st(application, ns.acl('mode'), mode, person.doc()))\n  ]\n}\n\n/* istanbul ignore next [This executes the actual HTTP requests, which is too much effort to test.] */\nexport function fetchTrustedApps (\n  store: $rdf.IndexedFormula,\n  subject: $rdf.NamedNode,\n): TrustedApplication[] {\n  return (store.each(subject, ns.acl('trustedApp'), undefined, undefined) as any)\n    .flatMap((app: $rdf.NamedNode) => {\n      return store.each(app, ns.acl('origin'), undefined, undefined)\n        .map((origin) => {\n          const modes = store.each(app, ns.acl('mode'), undefined, undefined)\n          const trustedApp: TrustedApplication = {\n            origin: origin.value,\n            subject: subject.value,\n            modes: modes.map((mode) => deserialiseMode(mode as $rdf.NamedNode))\n          }\n          return trustedApp\n        })\n    })\n    .sort((appA: TrustedApplication, appB: TrustedApplication) => (appA.origin > appB.origin) ? 1 : -1)\n}\n\n/**\n * @param serialisedMode The full IRI of a mode\n * @returns A plain text string representing that mode, i.e. 'Read', 'Append', 'Write' or 'Control'\n */\nexport function deserialiseMode (serialisedMode: $rdf.NamedNode): Mode {\n  const deserialisedMode = serialisedMode.value\n    .replace(ns.acl('Read').value, 'Read')\n    .replace(ns.acl('Append').value, 'Append')\n    .replace(ns.acl('Write').value, 'Write')\n    .replace(ns.acl('Control').value, 'Control')\n\n  return deserialisedMode as Mode\n}\n","import * as React from 'react'\nimport { NamedNode } from 'rdflib'\nimport { TrustedApplication, Mode } from './model'\n\ntype AddOrUpdate = (origin: string, modes: Mode[]) => Promise<void>\ninterface Props {\n  apps: Array<Exclude<TrustedApplication, { subject: NamedNode}>>;\n  onSaveApp: AddOrUpdate;\n  onDeleteApp: (origin: string) => Promise<void>;\n}\n\nexport const View: React.FC<Props> = (props) => {\n  return (\n    <>\n      <h2 className=\"title\">Applications</h2>\n      <p className=\"content\">Manage which applications can access data on your Pod.</p>\n      <p className=\"content\">Note: applications will never have more access than you have.</p>\n      <table className=\"table is-fullwidth is-bordered is-striped\">\n        <thead>\n          <tr>\n            <th>Application URL</th>\n            <th>Access level</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.apps.map((app) => (\n            <ApplicationRow\n              key={app.origin}\n              app={app}\n              onSave={props.onSaveApp}\n              onDelete={props.onDeleteApp}\n            />\n          ))}\n        </tbody>\n      </table>\n      <NewApplication onSave={props.onSaveApp}/>\n    </>\n  )\n}\n\nconst ApplicationRow: React.FC<{\n  app: TrustedApplication,\n  onSave: AddOrUpdate,\n  onDelete: (origin: string) => Promise<void>\n}> = (props) => {\n  const initialModes = {\n    Read: props.app.modes.indexOf('Read') !== -1,\n    Append: props.app.modes.indexOf('Append') !== -1,\n    Write: props.app.modes.indexOf('Write') !== -1,\n    Control: props.app.modes.indexOf('Control') !== -1\n  }\n  const [modes, setModes] = React.useState<{[ key: string]: boolean}>(initialModes)\n\n  const setMode = (mode: Mode, checked: boolean) => {\n    setModes({ ...modes, [mode]: checked })\n  }\n  const getCheckboxHandler = (mode: Mode) => {\n    return (event: React.ChangeEvent<HTMLInputElement>) => setMode(mode, event.target.checked)\n  }\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    const newModes = Object.keys(modes).filter(mode => modes[mode]) as Mode[]\n    props.onSave(props.app.origin, newModes)\n  }\n\n  return (\n    <tr>\n      <td>\n        <p>{props.app.origin}</p>\n      </td>\n      <td>\n        <form onSubmit={submitHandler}>\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={getCheckboxHandler('Read')}\n                  checked={modes.Read}\n                  name=\"Read\"\n                  id=\"Read\"\n                />\n                Read\n              </label>\n            </div>\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={getCheckboxHandler('Append')}\n                  checked={modes.Append}\n                  name=\"Append\"\n                  id=\"Append\"\n                />\n                Append\n              </label>\n            </div>\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={getCheckboxHandler('Write')}\n                  checked={modes.Write}\n                  name=\"Write\"\n                  id=\"Write\"\n                />\n                Write\n              </label>\n            </div>\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={getCheckboxHandler('Control')}\n                  checked={modes.Control}\n                  name=\"Control\"\n                  id=\"Control\"\n                />\n                Control\n              </label>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-small\">Save</button>\n            </div>\n          </div>\n        </form>\n      </td>\n      <td className=\"has-text-right is-narrow\">\n        <button\n          onClick={() => props.onDelete(props.app.origin)}\n          className=\"button is-danger is-small\"\n        >Delete</button>\n      </td>\n    </tr>\n  )\n}\n\nconst NewApplication: React.FC<{ onSave: AddOrUpdate }> = (props) => {\n  const [origin, setOrigin] = React.useState()\n  const [modes, setModes] = React.useState<{[ key: string]: boolean}>({\n    Read: false,\n    Append: false,\n    Write: false,\n    Control: false\n  })\n\n  const setMode = (mode: Mode, checked: boolean) => {\n    setModes({ ...modes, [mode]: checked })\n  }\n  const getCheckboxHandler = (mode: Mode) => {\n    return (event: React.ChangeEvent<HTMLInputElement>) => setMode(mode, event.target.checked)\n  }\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    const newModes = Object.keys(modes).filter(mode => modes[mode]) as Mode[]\n    props.onSave(origin, newModes)\n  }\n\n  return (\n    <form onSubmit={submitHandler} className=\"footer\">\n      <div className=\"field\">\n        <label className=\"label\">App URL:</label>\n        <input\n          type=\"url\"\n          onChange={(e) => setOrigin(e.target.value)}\n          name=\"origin\"\n          id=\"origin\"\n          placeholder=\"https://example.com\"\n          className=\"input\"\n        />\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={getCheckboxHandler('Read')}\n              name=\"Read\"\n              id=\"Read\"\n            />\n            Read\n          </label>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={getCheckboxHandler('Append')}\n              name=\"Append\"\n              id=\"Append\"\n            />\n            Append\n          </label>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={getCheckboxHandler('Write')}\n              name=\"Write\"\n              id=\"Write\"\n            />\n            Write\n          </label>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={getCheckboxHandler('Control')}\n              name=\"Control\"\n              id=\"Control\"\n            />\n            Control\n          </label>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-primary\">Give access</button>\n        </div>\n      </div>\n    </form>\n  )\n}","import React from 'react';\nimport $rdf, { NamedNode, IndexedFormula, UpdateManager } from 'rdflib';\nimport { TrustedApplication, Mode } from './model';\nimport { fetchTrustedApps, getStatementsToAdd, getStatementsToDelete } from './service';\nimport { View } from './view';\n\ninterface Props {\n  profile: NamedNode;\n  store: IndexedFormula;\n  updater: UpdateManager;\n};\n\nexport const TrustedApplications: React.FC<Props> = (props) => {\n  const fetchedTrustedApps: TrustedApplication[] = fetchTrustedApps(props.store, props.profile);\n\n  const [trustedApps, setTrustedApps] = React.useState(fetchedTrustedApps);\n\n  const isEditable: boolean = (props.updater as any).editable(props.profile.doc().uri, props.store);\n  if (!isEditable) {\n    return <div>Your profile {props.profile.doc().uri} is not editable, so we cannot do much here.</div>;\n  }\n\n  const addOrEditApp = (origin: string, modes: Mode[]) => {\n    const result = new Promise<void>((resolve) => {\n      const deletions = getStatementsToDelete($rdf.sym(origin), props.profile, props.store);\n      const additions = getStatementsToAdd($rdf.sym(origin), generateRandomString(), modes, props.profile);\n      props.store.updater!.update(deletions, additions, () => {\n        const newApp: TrustedApplication = { subject: props.profile.value, origin, modes };\n        setTrustedApps(insertTrustedApp(newApp, trustedApps));\n        resolve();\n      })\n    })\n\n    return result;\n  }\n\n  const deleteApp = (origin: string) => {\n    const result = new Promise<void>((resolve) => {\n      const deletions = getStatementsToDelete($rdf.sym(origin), props.profile, props.store);\n      props.store.updater!.update(deletions, [], () => {\n        setTrustedApps(removeTrustedApp(origin, trustedApps));\n        resolve();\n      })\n    })\n\n    return result;\n  }\n\n  return (\n    <section>\n      <View\n        apps={trustedApps}\n        onSaveApp={addOrEditApp}\n        onDeleteApp={deleteApp}\n      />\n    </section>\n  )\n}\n\nfunction insertTrustedApp (app: TrustedApplication, into: TrustedApplication[]): TrustedApplication[] {\n  const index = into.findIndex(found => found.origin === app.origin)\n  if (index === -1) {\n    return into.concat(app)\n  }\n\n  return into.slice(0, index)\n    .concat(app)\n    .concat(into.slice(index + 1))\n}\nfunction removeTrustedApp (origin: string, from: TrustedApplication[]): TrustedApplication[] {\n  const index = from.findIndex(found => found.origin === origin)\n  return (index === -1)\n    ? from\n    : from.slice(0, index).concat(from.slice(index + 1))\n}\n\nfunction generateRandomString (): string {\n  return Math.random().toString(36).substring(7)\n}\n","import React from 'react';\nimport { Statement } from 'rdflib';\nimport { namespaces as ns } from '../namespace';\n\ninterface Props {\n  profileStatements: Statement[];\n};\n\nexport const ProfileCard: React.FC<Props> = (props) => {\n  const profile = getProfile(props.profileStatements);\n  const photo = profile.photo ? <img src={profile.photo} className=\"image is-128x128\" alt={profile.name || ''}/> : null;\n\n  return (\n    <div className=\"card\">\n      <div className=\"section\">\n        <h2 className=\"title\">{profile.name || 'Anonymous'}</h2>\n        <p className=\"content\">\n          {photo}\n        </p>\n        <p className=\"content\">\n          {profile.role} {(profile.role && profile.organization) ? ' at ' : null} {profile.organization}\n        </p>\n      </div>\n    </div>\n  );\n};\n\ninterface ProfileFields {\n  name: string;\n  photo: string;\n  organization: string;\n  role: string;\n};\nfunction getProfile(statements: Statement[]): Partial<ProfileFields> {\n  const profile = statements.reduce(\n    (soFar, statement) => {\n      if (statement.predicate.value === ns.foaf('name').value) {\n        soFar.name = statement.object.value;\n      } else if (statement.predicate.value === ns.vcard('hasPhoto').value) {\n        soFar.photo = statement.object.value;\n      } else if (statement.predicate.value === ns.vcard('organization-name').value) {\n        soFar.organization = statement.object.value;\n      } else if (statement.predicate.value === ns.vcard('role').value) {\n        soFar.role = statement.object.value;\n      }\n\n      return soFar;\n    },\n    {} as Partial<ProfileFields>,\n  );\n\n  return profile;\n}\n","import React from 'react';\nimport { IndexedFormula, NamedNode, UpdateManager } from 'rdflib';\nimport { useWebId } from '@solid/react';\nimport { TrustedApplications } from './trustedApplications/container';\n\ninterface Props {\n  store: IndexedFormula;\n  updater: UpdateManager;\n  profile: NamedNode;\n};\n\nexport const Preferences: React.FC<Props> = (props) => {\n  const webId = useWebId();\n\n  if (!webId || webId !== props.profile.value) {\n    return (\n      <p>You can only set your own preferences.</p>\n    );\n  }\n\n  return (\n    <section className=\"section\">\n      <TrustedApplications\n        store={props.store}\n        updater={props.updater}\n        profile={props.profile}\n      />\n    </section>\n  );\n};\n","import React from 'react';\nimport { useWebId, LoggedIn } from '@solid/react';\nimport { PaneContainer, PaneContainerProps } from '../../components/PaneLoader';\nimport { ProfileCard } from '../../components/ProfileCard';\nimport { Preferences } from './preferences/preferences';\n\ntype Views = 'view' | 'preferences';\nexport const Container: PaneContainer = (props) => {\n  const [view, setView] = React.useState<Views>('view');\n\n  function getMenuHandler(forView: Views) {\n    return (event: React.MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n\n      setView(forView);\n    };\n  }\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <section className=\"section\">\n          <MainItem {...props} view={view}/>\n        </section>\n      </div>\n      <LoggedIn>\n        <aside className=\"column is-one-quarter\">\n          <div className=\"section\">\n            <div className=\"menu\">\n              <ul className=\"menu-list\">\n                <li>\n                  <a\n                    // TODO: When we have a router, add an actual route to link to\n                    href=\"#profile\"\n                    onClick={getMenuHandler('view')}\n                  >Profile</a>\n                </li>\n                <li>\n                  <a\n                    // TODO: When we have a router, add an actual route to link to\n                    href=\"#trustedApps\"\n                    onClick={getMenuHandler('preferences')}\n                  >Applications</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </aside>\n      </LoggedIn>\n    </div>\n  );\n};\n\nconst MainItem: React.FC<PaneContainerProps & { view: Views }> = (props) => {\n  if (props.view === 'preferences') {\n    return (\n      <Preferences\n        store={props.store}\n        updater={props.updater}\n        profile={props.resource}\n      />\n    );\n  }\n\n  const profileStatements = props.store.statementsMatching(props.resource, null, null, props.resource.doc());\n\n  return (\n    <ProfileCard profileStatements={profileStatements}/>\n  );\n}\n"],"sourceRoot":""}